{
  "name": "projecttemplate-assistant",
  "displayName": "AIPatternEnforcer Assistant",
  "description": "Smart context loader and enforcement for AI-assisted development",
  "version": "0.1.0",
  "publisher": "projecttemplate",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/AIPatternEnforcer"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Linters"
  ],
  "keywords": [
    "AI",
    "context",
    "copilot",
    "cursor",
    "development"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact",
    "onLanguage:markdown",
    "onCommand:projecttemplate.loadContext",
    "onCommand:projecttemplate.refreshContext",
    "onCommand:projecttemplate.showDashboard",
    "onCommand:projecttemplate.validateClaude",
    "onCommand:projecttemplate.validateClaudeFromClipboard",
    "onCommand:projecttemplate.checkLogCompliance",
    "onCommand:projecttemplate.fixAllLogViolations"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "projecttemplate.loadContext",
        "title": "Load AI Context",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.refreshContext",
        "title": "Refresh AI Context",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.showDashboard",
        "title": "Show Dashboard",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.checkNaming",
        "title": "Check File Naming",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.validateClaude",
        "title": "Validate Claude Response",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.validateClaudeFromClipboard",
        "title": "Validate Claude Response from Clipboard",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.claudeConfig",
        "title": "Open Claude Validation Config",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.checkLogCompliance",
        "title": "Check Log Compliance",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.fixAllLogViolations",
        "title": "Fix All Log Violations",
        "category": "AIPatternEnforcer"
      },
      {
        "command": "projecttemplate.showLogEnforcementStatus",
        "title": "Show Log Enforcement Status",
        "category": "AIPatternEnforcer"
      }
    ],
    "configuration": {
      "title": "AIPatternEnforcer Assistant",
      "properties": {
        "projecttemplate.enableAutoContext": {
          "type": "boolean",
          "default": true,
          "description": "Automatically load context when opening files"
        },
        "projecttemplate.contextSources": {
          "type": "array",
          "default": [
            ".cursorrules",
            "ai/config/.cursorrules",
            "CLAUDE.md"
          ],
          "description": "Files to include in AI context"
        },
        "projecttemplate.maxContextTokens": {
          "type": "number",
          "default": 4000,
          "description": "Maximum tokens to include in context"
        },
        "projecttemplate.recentFilesCount": {
          "type": "number",
          "default": 5,
          "description": "Number of recent files to include in context"
        },
        "projecttemplate.enableNamingEnforcement": {
          "type": "boolean",
          "default": true,
          "description": "Show warnings for files that violate naming rules"
        },
        "projecttemplate.enableClaudeValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable Claude validation integration"
        },
        "projecttemplate.claudeValidationAutoRun": {
          "type": "boolean",
          "default": false,
          "description": "Automatically validate when text is copied to clipboard"
        },
        "projecttemplate.claudeValidationSeverity": {
          "type": "string",
          "default": "WARNING",
          "enum": [
            "CRITICAL",
            "WARNING",
            "INFO",
            "DISABLED"
          ],
          "description": "Minimum severity level for Claude validation"
        },
        "projecttemplate.enableLogEnforcement": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time log enforcement with diagnostics and quick fixes"
        },
        "projecttemplate.logEnforcementExcludeTests": {
          "type": "boolean",
          "default": true,
          "description": "Exclude test files from log enforcement checks"
        },
        "projecttemplate.logEnforcementAutoFix": {
          "type": "boolean",
          "default": false,
          "description": "Automatically fix log violations on save"
        },
        "projecttemplate.logEnforcementSeverity": {
          "type": "string",
          "default": "error",
          "enum": [
            "error",
            "warning",
            "info"
          ],
          "description": "Severity level for log enforcement diagnostics"
        }
      }
    },
    "keybindings": [
      {
        "command": "projecttemplate.loadContext",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus"
      },
      {
        "command": "projecttemplate.refreshContext",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorTextFocus"
      },
      {
        "command": "projecttemplate.validateClaudeFromClipboard",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "editorTextFocus"
      },
      {
        "command": "projecttemplate.checkLogCompliance",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "editorTextFocus"
      },
      {
        "command": "projecttemplate.fixAllLogViolations",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/node": "^16.18.126",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "glob": "^8.0.3"
  }
}
