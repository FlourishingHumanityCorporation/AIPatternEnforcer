import React from 'react';
import styles from './{{name}}.module.css';

export interface {{name}}Props {
  /** Primary content */
  children?: React.ReactNode;
  /** Optional CSS class */
  className?: string;
  /** Open state */
  isOpen: boolean;
  /** Close handler */
  onClose: () => void;
  /** Click outside to close */
  closeOnClickOutside?: boolean;
  /** Test ID for testing */
  testId?: string;
}

/**
 * {{name}} component - Modals, tooltips, popovers - components that overlay content
 * 
 * @example
 * <{{name}} isOpen={isOpen} onClose={handleClose}>
 *   Modal content
 * </{{name}}>
 */
export const {{name}}: React.FC<{{name}}Props> = ({
  children,
  className = '',
  isOpen,
  onClose,
  closeOnClickOutside = true,
  testId = '{{kebabCase name}}'
}) => {
  // Handle escape key
  React.useEffect(() => {
    const handleEscape = (e: KeyboardEvent) => {
      if (e.key === 'Escape' && isOpen) {
        onClose();
      }
    };
    document.addEventListener('keydown', handleEscape);
    return () => document.removeEventListener('keydown', handleEscape);
  }, [isOpen, onClose]);

  if (!isOpen) return null;

  return (
    <>
      <div 
        className={styles.backdrop}
        onClick={closeOnClickOutside ? onClose : undefined}
        aria-hidden="true"
      />
      <div 
        className={`${styles.container} ${className}`}
        role="dialog"
        aria-modal="true"
        data-testid={testId}
      >
        <button
          className={styles.closeButton}
          onClick={onClose}
          aria-label="Close"
          type="button"
        >
          Ã—
        </button>
        {children}
      </div>
    </>
  );
};

{{name}}.displayName = '{{name}}';